{"version":3,"sources":["Button.jsx","App.jsx","index.js"],"names":["Button","message","alert","onClick","this","props","fn","className","Component","App","colors","shuffle","setState","colores","state","sort","Math","random","map","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAGqBA,E,4MAErBC,QAAU,kBAAMC,MAAM,sBAAZ,E,4CAEN,WACI,OACI,wBAAQC,QAAkC,oBAAlBC,KAAKC,MAAMC,GAAoBF,KAAKC,MAAMC,GAAMF,KAAKH,QAASM,UAAU,gBAAhG,uBAEP,K,GAR+BC,aCCfC,G,wDASjB,aAAe,IAAD,8BACZ,gBATJC,OAAS,CAAC,MAAM,OAAO,SAAU,QAAQ,SAAS,UAAU,QAAQ,QAQpD,EAOdC,QAAU,WACR,EAAKC,SAAS,CACZC,QAAS,EAAKC,MAAMJ,OAAOK,MAAK,kBAAKC,KAAKC,SAAW,EAArB,KAEnC,EATC,EAAKH,MAAQ,CACXJ,OAAQ,EAAKA,QAHH,CAKb,C,0CAgBH,WACE,OACE,sBAAKH,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,SACGH,KAAKM,OAAOQ,KAAI,SAAAC,GAAK,OAAI,qBAAiBZ,UAAWY,EAA5B,SAAoCA,GAA1BA,EAAd,MAExB,cAAC,EAAD,CAAQb,GAAIF,KAAKO,YAItB,K,GAxC8BH,cCCjCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,Q","file":"static/js/main.54a00834.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./Random.css\"\n\nexport default class Button extends Component {\n    \nmessage = () => alert(\"PASAME UNA FUNCION!\")\n\n    render() {\n        return (\n            <button onClick={typeof this.props.fn === \"function\" ? this.props.fn  : this.message} className=\"glow-on-hover\">Get Random</button>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Button from './Button'\nimport \"./App.css\";\n\nexport default class App extends Component {\n  colors = [\"RED\",\"BLUE\",\"YELLOW\", \"GREEN\",\"ORANGE\",\"MAGENTA\",\"BROWN\",\"LIME\"]\n  /* ESPACIO DE TRABAJO\n  - Armar la estructura para una Class Component\n  - Hacer un state con el arreglo de los colores\n  - Vamos a usar una funcion shuffle mas abajo y vamos a enviarla por props... que\n    formas tenemos para no perder el contexto?\n  */\n\n    constructor() {\n      super()\n      this.state = {\n        colors: this.colors\n      }\n    }\n\n    shuffle = () => {\n      this.setState({\n        colores:(this.state.colors.sort(()=> Math.random() - 0.5))\n      })\n    }\n\n\n  /* ESPACIO DE TRABAJO\n  Funcion Shuffle\n  Aqui deberan hacer una funcion que me retorne un nuevo arreglo con los\n  colores mezclados\n  */\n\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"panel\">\n          {this.colors.map(color => <div key={color} className={color}>{color}</div>)}\n        </div>\n        <Button fn={this.shuffle} />\n      </div>\n\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}